#!/usr/bin/python3
#
#

import os
import sys
import json
from FriendlyArgumentParser import FriendlyArgumentParser
from Tools import ImageTools

parser = FriendlyArgumentParser(description = "Classify a photo to be used as a passport.")
parser.add_argument("-v", "--verbose", action = "count", default = 0, help = "Increases verbosity. Can be specified multiple times to increase.")
parser.add_argument("image_input_filename", type = str, help = "Image input file.")
parser.add_argument("json_output_filename", type = str, help = "Classified output file.")
args = parser.parse_args(sys.argv[1:])

if os.path.exists(args.json_output_filename):
	print("Refusing to overwrite: %s" % (args.json_output_filename))
	sys.exit(1)

def get_coordinates(prompt):
	while True:
		value = input(prompt)
		value = value.split(",")
		return (int(value[0]), int(value[1]))

def get_value(prompt):
	while True:
		value = input(prompt)
		value = int(value)
		return value

left_eye = get_coordinates("Left eye coordinates (x, y) : ")
right_eye = get_coordinates("Right eye coordinates (x, y): ")
nose = get_coordinates("Nose coordinates (x, y)     : ")
head_y = get_value("Head Y value                : ")
chin_y = get_value("Chin Y value                : ")

json_data = {
	"image": {
		"filename":		args.image_input_filename,
		"geometry":		ImageTools.get_image_geometry(args.image_input_filename),
	},
	"pois": {
		"left_eye":		left_eye,
		"right_eye":	right_eye,
		"head_y":		head_y,
		"chin_y":		chin_y,
		"nose":			nose,
	},
}

with open(args.json_output_filename, "w") as f:
	json.dump(json_data, f, sort_keys = True, indent = 4)
